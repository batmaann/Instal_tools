#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –õ–æ–≥ —Ñ–∞–π–ª
LOG_FILE="installation.log"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–∞
is_package_installed() {
    dpkg -l "$1" 2>/dev/null | grep -q "^ii" || command -v "$1" &>/dev/null
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ apt
safe_apt() {
    local command=$1
    shift
    local retries=3
    local delay=5
    
    for ((i=1; i<=retries; i++)); do
        if sudo apt-get $command -y "$@" >> "$LOG_FILE" 2>&1; then
            return 0
        else
            log "${YELLOW}–ü–æ–ø—ã—Ç–∫–∞ $i –∏–∑ $retries –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ $delay —Å–µ–∫—É–Ω–¥...${NC}"
            sleep $delay
            sudo apt-get --fix-broken install -y >> "$LOG_FILE" 2>&1
        fi
    done
    
    log "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ apt-get $command${NC}"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–∫–µ—Ç–æ–≤
update_packages() {
    # –Ø—Ä–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏
    echo -e "${GREEN}\n========================================${NC}"
    echo -e "${GREEN}         –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´          ${NC}"
    echo -e "${GREEN}========================================${NC}"

    # 1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã (—Å –∞–Ω–∏–º–∞—Ü–∏–µ–π)
    log "${YELLOW}‚öô –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...${NC}"
    echo -n "[    ] –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞"
    sudo dpkg --configure -a > /dev/null 2>&1 &
    sudo apt-get clean > /dev/null 2>&1 &
    sudo apt-get autoclean > /dev/null 2>&1 &
    echo -e "\r[${GREEN}====${NC}] –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö PPA (—Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º)
    log "${YELLOW}üîç –ü–æ–∏—Å–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤...${NC}"
    if grep -R "certbot/certbot" /etc/apt/sources.list.d/; then
        echo -e "${RED}‚ö† –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø—Ä–æ–±–ª–µ–º–Ω—ã–π PPA certbot${NC}"
        echo -n "–£–¥–∞–ª–µ–Ω–∏–µ..."
        sudo add-apt-repository --remove ppa:certbot/certbot -y > /dev/null 2>&1
        sudo rm -f /etc/apt/sources.list.d/certbot-ubuntu-certbot-*.list
        echo -e "\r${GREEN}‚úì –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ${NC}"
    else
        echo -e "${GREEN}‚úì –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã${NC}"
    fi

    # 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
    log "${YELLOW}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤...${NC}"
    echo -n "[    ] –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–∫–µ—Ç–∞—Ö"
    if ! safe_apt update; then
        echo -e "\r${RED}‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏${NC}"
        return 1
    fi
    echo -e "\r[${GREEN}====${NC}] –°–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω"

    # 4. –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    log "${YELLOW}üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤...${NC}"
    total=$(apt list --upgradable 2>/dev/null | wc -l)
    ((total--))
    
    if [ $total -gt 0 ]; then
        echo -e "${YELLOW}–ù–∞–π–¥–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: $total${NC}"
        echo -n "["
        sudo apt-get upgrade -y | while read line; do
            if [[ $line =~ ^Inst ]]; then
                echo -n "="
            fi
        done
        echo -e "] ${GREEN}100%${NC}"
    else
        echo -e "${GREEN}‚úì –í—Å–µ –ø–∞–∫–µ—Ç—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã${NC}"
    fi

    # 5. –ó–∞–≤–µ—Ä—à–∞—é—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    log "${YELLOW}üßπ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã...${NC}"
    echo -n "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è..."
    sudo apt-get dist-upgrade -y > /dev/null 2>&1
    sudo apt-get autoremove -y > /dev/null 2>&1
    echo -e "\r${GREEN}‚úì –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"

    # –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    echo -e "${GREEN}\n‚úî –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!${NC}"
    return 0
}

install_git() {
    if is_package_installed git; then
        log "${YELLOW}Git —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í–µ—Ä—Å–∏—è: $(git --version | awk '{print $3}')${NC}"
        return 0
    fi

    log "${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Git...${NC}"
    if safe_apt install git; then
        log "${GREEN}Git —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í–µ—Ä—Å–∏—è: $(git --version | awk '{print $3}')${NC}"
    else
        log "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Git${NC}"
        return 1
    fi
}

install_google_chrome() {
    if is_package_installed google-chrome; then
        log "${YELLOW}Google Chrome —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        return 0
    fi

    log "${GREEN}–ó–∞–≥—Ä—É–∑–∫–∞ Google Chrome...${NC}"
    if wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -O /tmp/google-chrome.deb >> "$LOG_FILE" 2>&1; then
        log "${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Google Chrome...${NC}"
        if sudo dpkg -i /tmp/google-chrome.deb >> "$LOG_FILE" 2>&1; then
            safe_apt install -f
            rm -f /tmp/google-chrome.deb
            log "${GREEN}Google Chrome —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        else
            log "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Google Chrome${NC}"
            return 1
        fi
    else
        log "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ Google Chrome${NC}"
        return 1
    fi
}

install_oh_my_zsh() {
    log "${GREEN}–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Oh My Zsh...${NC}"
    if [ ! -d "$HOME/.oh-my-zsh" ]; then
        log "${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh My Zsh...${NC}"
        if sh -c "$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)" >> "$LOG_FILE" 2>&1; then
            log "${GREEN}Oh My Zsh —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
            return 0
        else
            log "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Oh My Zsh${NC}"
            return 1
        fi
    else
        log "${YELLOW}Oh My Zsh —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        return 0
    fi
}

setup_bira_theme() {
    log "${GREEN}–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã Zsh...${NC}"
    
    local zshrc_file="$HOME/.zshrc"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Oh My Zsh
    if [ ! -d "$HOME/.oh-my-zsh" ]; then
        log "${RED}Oh My Zsh –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Oh My Zsh.${NC}"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .zshrc
    if [ ! -f "$zshrc_file" ]; then
        log "${YELLOW}–§–∞–π–ª .zshrc –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π...${NC}"
        cp "$HOME/.oh-my-zsh/templates/zshrc.zsh-template" "$zshrc_file"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Ç–µ–º—É
    if grep -q '^ZSH_THEME="bira"' "$zshrc_file"; then
        log "${YELLOW}–¢–µ–º–∞ bira —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...${NC}"
        return 0
    elif grep -q '^ZSH_THEME=' "$zshrc_file"; then
        log "${YELLOW}–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –¥—Ä—É–≥–∞—è —Ç–µ–º–∞, –º–µ–Ω—è–µ–º –Ω–∞ bira...${NC}"
    else
        log "${YELLOW}–¢–µ–º–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º bira...${NC}"
    fi
    
    # –î–µ–ª–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é .zshrc, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f "${zshrc_file}.bak" ]; then
        cp "$zshrc_file" "${zshrc_file}.bak"
        log "${YELLOW}–°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è .zshrc: ${zshrc_file}.bak${NC}"
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É bira
    if sed -i 's/^ZSH_THEME=.*/ZSH_THEME="bira"/' "$zshrc_file" 2>> "$LOG_FILE"; then
        log "${GREEN}–¢–µ–º–∞ bira —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
        log "${YELLOW}–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: source ~/.zshrc${NC}"
        return 0
    else
        log "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ç–µ–º—ã bira${NC}"
        return 1
    fi
}

install_zsh() {
    if is_package_installed zsh; then
        current_shell=$(basename "$SHELL")
        if [ "$current_shell" = "zsh" ]; then
            log "${YELLOW}Zsh —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –æ–±–æ–ª–æ—á–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –í–µ—Ä—Å–∏—è: $(zsh --version | awk '{print $2}')${NC}"
        else
            log "${YELLOW}Zsh —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±–æ–ª–æ—á–∫–æ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –¢–µ–∫—É—â–∞—è –æ–±–æ–ª–æ—á–∫–∞: $current_shell${NC}"
        fi
    else
        log "${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Zsh...${NC}"
        if safe_apt install zsh; then
            chsh -s "$(which zsh)"
            log "${GREEN}Zsh —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –æ–±–æ–ª–æ—á–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –í–µ—Ä—Å–∏—è: $(zsh --version | awk '{print $2}')${NC}"
        else
            log "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Zsh${NC}"
            return 1
        fi
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh My Zsh –∏ —Ç–µ–º—ã bira (–µ—Å–ª–∏ Zsh —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ —É–∂–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
    if install_oh_my_zsh; then
        setup_bira_theme
    fi
    
    log "${YELLOW}–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ 'zsh' –¥–ª—è –≤—Ö–æ–¥–∞ –≤ Zsh${NC}"
    return 0
}

    install_outline_client() {
        if is_package_installed outline-client; then
            log "${YELLOW}Outline Client —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
            return 0
        fi

        log "${GREEN}–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Outline Client...${NC}"
        
        # –ò–º–ø–æ—Ä—Ç GPG –∫–ª—é—á–∞
        if ! wget -qO- https://us-apt.pkg.dev/doc/repo-signing-key.gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/gcloud-artifact-registry-us.gpg 2>> "$LOG_FILE"; then
            log "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ GPG –∫–ª—é—á–∞${NC}"
            return 1
        fi
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        if ! echo "deb [arch=amd64] https://us-apt.pkg.dev/projects/jigsaw-outline-apps outline-client main" | sudo tee /etc/apt/sources.list.d/outline-client.list >> "$LOG_FILE" 2>&1; then
            log "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è${NC}"
            return 1
        fi
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        if ! safe_apt update; then
            log "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤${NC}"
            return 1
        fi
        
        log "${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Outline Client...${NC}"
        if safe_apt install outline-client; then
            log "${GREEN}Outline Client —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        else
            log "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Outline Client${NC}"
            return 1
        fi
    }

main() {
    # --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ sudo (–µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±—É–µ—Ç root)
    if [ "$(id -u)" -ne 0 ]; then
        log "${RED}–û—à–∏–±–∫–∞: —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤ root/sudo. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å sudo.${NC}"
        exit 1
    fi

    # –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥-—Ñ–∞–π–ª–∞
    > "$LOG_FILE"
    log "${GREEN}=== –ù–∞—á–∞–ª–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ===${NC}"

    # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ---
    local dependencies=("wget" "curl" "gpg")  # –ü—Ä–∏–º–µ—Ä –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    for dep in "${dependencies[@]}"; do
        if ! command -v "$dep" &>/dev/null; then
            log "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–µ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: $dep...${NC}"
            safe_apt install "$dep" || {
                log "${RED}–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $dep. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º...${NC}"
                continue
            }
        fi
    done

    # --- –û—Å–Ω–æ–≤–Ω—ã–µ —ç—Ç–∞–ø—ã ---
    local stages=(
        "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:update_packages"
        "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Git:install_git"
        "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Google Chrome:install_google_chrome"
        "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Zsh:install_zsh"
    )

    local has_errors=0

    for stage in "${stages[@]}"; do
        local name="${stage%%:*}"
        local func="${stage##*:}"

        log "${GREEN}‚ñ∂ –≠—Ç–∞–ø: $name${NC}"
        
        if ! $func; then
            log "${RED}‚ö† –û—à–∏–±–∫–∞ –≤ —ç—Ç–∞–ø–µ: $name${NC}"
            has_errors=1
        fi
    done

    # --- –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ ---
    if [ $has_errors -eq 0 ]; then
        log "${GREEN}‚úî –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    else
        log "${YELLOW}‚ö† –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥.${NC}"
    fi

    # –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞
    log "–õ–æ–≥-—Ñ–∞–π–ª: $LOG_FILE"
    echo -e "\n${YELLOW}=== –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞ ===${NC}"
    tail -n 10 "$LOG_FILE" | sed -e 's/\x1b\[[0-9;]*m//g'  # –£–¥–∞–ª—è–µ–º —Ü–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–∞

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –±—ã–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã
    return $has_errors
}



main